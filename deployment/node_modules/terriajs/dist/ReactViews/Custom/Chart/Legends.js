import PropTypes from "prop-types";
import React from "react";
import { LegendOrdinal, LegendItem, LegendLabel } from "@vx/legend";
import { scaleOrdinal } from "@vx/scale";
import Styles from "./legends.scss";
export default class Legends extends React.PureComponent {
    render() {
        const chartItems = this.props.chartItems;
        const colorScale = scaleOrdinal({
            domain: chartItems.map(c => `${c.categoryName} ${c.name}`),
            range: chartItems.map(c => c.getColor())
        });
        return (React.createElement("div", { className: Styles.legends, style: { maxHeight: `${Legends.maxHeightPx}px` } },
            React.createElement(LegendOrdinal, { scale: colorScale }, labels => (React.createElement(For, { each: "label", of: labels },
                React.createElement(Legend, { key: `legend-${label.text}`, label: label }))))));
    }
}
Legends.propTypes = {
    chartItems: PropTypes.array.isRequired
};
Legends.maxHeightPx = 33;
class Legend extends React.PureComponent {
    render() {
        const label = this.props.label;
        const squareSize = 15;
        return (React.createElement(LegendItem, { margin: "0 5px" },
            React.createElement("svg", { width: squareSize, height: squareSize },
                React.createElement("rect", { fill: label.value, width: squareSize, height: squareSize })),
            React.createElement(LegendLabel, { className: Styles.label, align: "left", margin: "0 0 0 4px" }, label.text)));
    }
}
Legend.propTypes = {
    label: PropTypes.object.isRequired
};
//# sourceMappingURL=Legends.js.map